/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

 int count(struct TreeNode* r) {
    return r ? 1 + count(r->left) + count(r->right) : 0;
}

void helper(struct TreeNode* r, int* res, int* i) {
    if (!r) return;
    res[(*i)++] = r->val;
    helper(r->left, res, i);
    helper(r->right, res, i);
}

int* preorderTraversal(struct TreeNode* root, int* returnSize) {
    *returnSize = count(root);
    int* res = malloc(*returnSize * sizeof(int)), i = 0;
    helper(root, res, &i);
    return res;
    
}
